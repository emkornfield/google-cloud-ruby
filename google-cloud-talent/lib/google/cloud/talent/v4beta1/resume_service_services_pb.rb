# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/cloud/talent/v4beta1/resume_service.proto for package 'google.cloud.talent.v4beta1'
# Original file comments:
# Copyright 2019 Google LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#


require 'grpc'
require 'google/cloud/talent/v4beta1/resume_service_pb'

module Google
  module Cloud
    module Talent
      module V4beta1
        module ResumeService
          # A service that handles resume parsing.
          class Service

            include GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'google.cloud.talent.v4beta1.ResumeService'

            # Parses a resume into a [Profile][google.cloud.talent.v4beta1.Profile]. The
            # API attempts to fill out the following profile fields if present within the
            # resume:
            #
            # * personNames
            # * addresses
            # * emailAddress
            # * phoneNumbers
            # * personalUris
            # * employmentRecords
            # * educationRecords
            # * skills
            #
            # Note that some attributes in these fields may not be populated if they're
            # not present within the resume or unrecognizable by the resume parser.
            #
            # This API does not save the resume or profile. To create a profile from this
            # resume, clients need to call the CreateProfile method again with the
            # profile returned.
            #
            # The following list of formats are supported:
            #
            # * PDF
            # * TXT
            # * DOC
            # * RTF
            # * DOCX
            # * PNG (only when [ParseResumeRequest.enable_ocr][] is set to `true`,
            # otherwise an error is thrown)
            rpc :ParseResume, ParseResumeRequest, ParseResumeResponse
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
